Test cases for a class that contains methods related to geometry and 
numeric type validation

>>> BaseGeometry = __import__("7-base_geometry").BaseGeometry
>>> bg = BaseGeometry()
>>> try:
...     bg.integer_validator("name", "John")
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
... 
[TypeError] name must be an integer

>>> bg.integer_validator("J", "J")
Traceback (most recent call last):
TypeError: J must be an integer

>>> bg.integer_validator("J")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("k", -5)
Traceback (most recent call last):
ValueError: k must be greater than 0

>>> try:
...     bg.integer_validator("distance", -4)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
... 
[ValueError] distance must be greater than 0

>>> try:
...     bg.integer_validator("age", 0)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
... 
[ValueError] age must be greater than 0

>>> bg.integer_validator("J", 2.36)
Traceback (most recent call last):
TypeError: J must be an integer

>>> bg.integer_validator("J", 2 + 6j)
Traceback (most recent call last):
TypeError: J must be an integer

>>> bg.integer_validator("J", -4.56)
Traceback (most recent call last):
TypeError: J must be an integer

>>> bg.integer_validator("J", True)
Traceback (most recent call last):
TypeError: J must be an integer

>>> bg.integer_validator("J", [2,3])
Traceback (most recent call last):
TypeError: J must be an integer

>>> bg.integer_validator("J", (2,3))
Traceback (most recent call last):
TypeError: J must be an integer

>>> bg.integer_validator("J", (2,))
Traceback (most recent call last):
TypeError: J must be an integer

>>> bg.integer_validator("J", [5])
Traceback (most recent call last):
TypeError: J must be an integer
